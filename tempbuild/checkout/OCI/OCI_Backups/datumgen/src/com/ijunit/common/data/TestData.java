/**
 * 
 */
package com.ijunit.common.data;

import java.util.Vector;

/**
 * A POJO object to represent data for testing. It represent a business object
 * by holding a collection of attributes of business object. Attributes of
 * business object are hold in a collection of KeyColumn objects.
 * 
 * @author Vikash Jain
 * 
 */
public class TestData {
	/**
	 * Member variable for ID.
	 */
	private String ID;

	/**
	 * Member variable for test data class
	 */
	private String dataClass;

	/**
	 * Member variable for collection of KeyColumn objects
	 */
	private Vector keyColumns;

	/**
	 * Member variable for database table corresponding to business object
	 */
	private String dataTable;

	/**
	 * Member variable for sql file
	 * 
	 * @deprecated
	 */
	private String sqlFile;

	/**
	 * Member variable for data file
	 */
	private String dataFile;

	/**
	 * Member variable for data helper class.
	 */
	private String dataHelperClass;

	/**
	 * @return the dataFile
	 */
	public String getDataFile() {
		return dataFile;
	}

	/**
	 * @param dataFile
	 *            the dataFile to set
	 */
	public void setDataFile(String dataFile) {
		this.dataFile = dataFile;
	}

	/**
	 * @return the dataHelperClass
	 */
	public String getDataHelperClass() {
		return dataHelperClass;
	}

	/**
	 * A helper class to create a instance of business object represented by
	 * this data object. If business object instantiation required some task
	 * then one can write a static method in helper class to perform additional
	 * task. This static method can be called while creating test data.
	 * 
	 * @param dataHelperClass
	 *            the fully qualified name of helper Class
	 */
	public void setDataHelperClass(String dataHelperClass) {
		this.dataHelperClass = dataHelperClass;
	}

	/**
	 * @return the dataTable
	 */
	public String getDataTable() {
		return dataTable;
	}

	/**
	 * Database table name associated with business object.
	 * 
	 * @param dataTable
	 *            the dataTable to set
	 */
	public void setDataTable(String dataTable) {
		this.dataTable = dataTable;
	}

	/**
	 * @return the sqlFile
	 */
	public String getSqlFile() {
		return sqlFile;
	}

	/**
	 * @param sqlFile
	 *            the sqlFile to set
	 */
	public void setSqlFile(String sqlFile) {
		this.sqlFile = sqlFile;
	}

	/**
	 * Constructor.
	 * 
	 * @param dataClass
	 *            - fully qualified class name for business object.
	 */
	public TestData(String dataClass) {
		this.dataClass = dataClass;
	}

	/**
	 * Constructor.
	 * 
	 * @param dataClass
	 *            - fully qualified class name for business object.
	 * @param keyColumns
	 *            - collection of column-value pair of attributes of business
	 *            object.
	 */
	public TestData(String dataClass, Vector keyColumns) {
		this.dataClass = dataClass;
		this.keyColumns = keyColumns;
	}

	/**
	 * @return the dataClass
	 */
	public String getDataClass() {
		return dataClass;
	}

	/**
	 * Fully qualified class name for business object.
	 * 
	 * @param dataClass
	 *            the dataClass to set
	 */
	public void setDataClass(String dataClass) {
		this.dataClass = dataClass;
	}

	/**
	 * @return the iD
	 */
	public String getID() {
		return ID;
	}

	/**
	 * @param id
	 *            the iD to set This value will be auto generated by system.
	 */
	public void setID(String id) {
		ID = id;
	}

	/**
	 * @return the keyColumns
	 */
	public Vector getKeyColumns() {
		return keyColumns;
	}

	/**
	 * Collection of KeyColumn Object.
	 * 
	 * @param keyColumns
	 *            the keyColumns to set
	 */
	public void setKeyColumns(Vector keyColumns) {
		this.keyColumns = keyColumns;
	}

}
